name: 🚀 CI Pipeline - Learning CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Job 1: Code Quality Checks
  code-quality:
    name: 📝 Code Quality & Linting
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        
    - name: 🔍 Run Linting (flake8)
      run: |
        echo "Running code linting..."
        flake8 src/ tests/ --max-line-length=100 --ignore=E203,W503 || echo "Linting completed with warnings"
        
    - name: 📊 Code Formatting Check (black)
      run: |
        echo "Checking code formatting..."
        black --check src/ tests/ || echo "Code formatting check completed"

  # Job 2: Testing on Multiple Python Versions  
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    needs: code-quality
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']
        
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        
    - name: 🧪 Run Unit Tests
      run: |
        echo "Running tests with Python ${{ matrix.python-version }}..."
        pytest tests/ -v --tb=short
        
    - name: 📈 Generate Coverage Report
      run: |
        echo "Generating test coverage report..."
        pytest tests/ --cov=src --cov-report=term-missing
        
  # Job 3: Security Scanning
  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        
    - name: 🔒 Run Security Check (bandit)
      run: |
        echo "Running security scan..."
        bandit -r src/ || echo "Security scan completed"
        
  # Job 4: Build Application
  build:
    name: 🏗️ Build Application
    runs-on: ubuntu-latest
    needs: [test, security]
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: 🏗️ Build Package
      run: |
        echo "Building application package..."
        python -m py_compile src/main.py
        python -m py_compile src/utils/math_helpers.py
        echo "✅ Build successful!"
        
    - name: 📦 Create Artifact
      run: |
        mkdir -p build
        cp -r src/ build/
        cp requirements.txt build/
        tar -czf app-build.tar.gz build/
        
    - name: 📤 Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: python-app-build
        path: app-build.tar.gz